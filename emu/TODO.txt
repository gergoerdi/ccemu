----- emulator changes list -----

changes since the last official release:

* Overhauled the keyboard logic to better handle the case when more than one
  key is down at the same time.  This prevents key loss when typing quickly,
  and helps in certain games which do realtime scanning of the keyboard
  matrix to detect which keys are are up or down at a given time.

* The virtual keyboard now implements the full keyboard, not just the odd
  keys.  A new pulldown allows choosing the keyboard layout.

* added cooltools.ccvf, a collection of program developer tools

* Files which are fed into the autotyper have three pragmas now:
    [[[RESET]]]        --- triggers a hard reset
    [[[STUFFLINES]]]   --- stuff a line at a time (useful for entering BASIC)
    [[[STUFFKEYS]]]    --- feed in text one key at a time; wait 10 field times
                           at each end-of-line to allow processing.
                           this is the default condition.
    [[[STUFFKEYS;15]]] --- like [[[STUFFKEYS]]], but wait 15 field times.  the
                           number after the semicolon can be counting number.

* If a virtual floppy image has been modified and not saved, a warning
  dialog pops up when exiting the page, reloading, or closing the browser.

* Moved the Help and About links to a more easily discovered location

* Fixed some bugs in the 8080 and TMS 5501 interrupt handling logic

* SUB, SBB, AND, OR, and XOR opcodes were mishandling the aux carry flag;
  SUB and SBB were also mishandling the carry flag; DAA had a number of
  problems.  The flags register wasn't respecting the fact that bits
  1, 3, and 5 are constant values.

* Events are now delegated from the enclosing div, instead of having
  event handlers for each virtual key. (internal plumbing)

* changed library to jquery-1.11.0  (from 1.9.1).  the hope is it takes
  advantage of recent browser improvements.

----- emulator TODO list -----

add cookies/persistent state for the emulator configuration

add joystick emulation (garry epps sent some notes on the model)

garry epps points out that in his space invaders clone (invaders_epps.ccvf)
that the shift keys are supposed to fire but don't.  I found that they
fire if caps lock is active, but don't fire if not.  is this an emulator
bug or a game bug?

the cpu turbo mode is a dirty hack. rather than trying to measure load
and then increase the number of instructions per timeslice, keep a fixed
size timeslice.  rather than having a setInterval() scheduling, just
execute a timeslice, then schedule another timeslice immediately.

look whether it makes sense to use the animation callback instead of
setInterval() for schedulding timeslices.

code cleanup:
    js8080.js has Cpu.toString and another very similar function which
    I believe aren't used.  at the same time, ccemu recreates these in via
    peeking to the Cpu guts.  make this clean.

soundware emulation corner case:
    taylor/taylor_2.ccvf, STREK2.BAS invokes XXXXXX.BAS, which seems
    like it is printing character strings and such to the serial port
    in order to generate audio.

allow emulator to read .zip files?

fix for peter's RPM.PRG?
    He triggers on the "start bit seen" status bit, rather than the rx data
    ready status.  What if start-bit-seen was driven simultaneously with
    rx-buffer-ready?
    Section 2.2.4 says:
        Bit 7, start bit detected
        A high in bit 7 indicates that the start bit of an incoming data
        character has been detected.  This bit remains high until the entire
        character has been received or until a reset is issued and is provided
        for test purposes.

    utility_3.ccvf has a program "RPM.PRG"
        which is a later version of SPEED.PRG, and it seems to run.
        Peter Hiner created this version.  it fails to work because
        the program polls on the serial port "start bit received" status bit,
        which the emulator doesn't model (it models at the byte level).
        it apparently clears track 40 (!); Peter thinks it wrote a short
        blip, then timed now long it took between two successive blips

        other/modified_utilities.ccvf has SPEEDO.PRG, which is tailored for
            v8.79 (4-phase) machines

taylor_7.ccvf has the program "FMTCD1" to format the disk in drive 1.
However, it fails to verify after formatting and gives up after three
tries.  Figure out what it is unhappy.

The capture disk in box_14/asm_programs.ccvf contains a bunch of different
character sets expressed as lists of bytes.  could be useful.

the emulator doesn't honor the disk write protection flag
    (just like the real hardware!)
why does it exist?

cleanup (ever?):
    figure out how to put everything into one emulator namespace even
    when modules are in separate files.  Having "pad()" at the global
    scope is particularly bad.
    http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html

page 5.20 of the maintenance manual talks about DRAM refresh.  It seems like a
one-shot times out each 1 ms, and then 64 or 128 refresh cycles are performed.
"refresh requires 32 us (64 us for 128 cycles) for completion."
When the floppy is transferring data, 64 uS represents about five bit times.
So refresh could add jitter of this magnitude during reads and writes.
