----- emulator changes list -----

changes post 2013-11-30:

* added soundware emulation for platforms which support the AudioContext API

* exposed the ROM version dialog box, as it turns out there are a few
  disks which require v8.79 ROMs

* for the sake of the website, the emulator now looks for these parameters
  in the URI string:
     cd0=../vmedia/somedisk-sector.ccvf  (default state is an empty drive)
     cd1=../vmedia/somedisk-sector.ccvf  (default state is an empty drive)
     rom=v6.78                           (this is the default state)
     rom=v8.79
     auto=0                              (this is the default state)
     auto=1              (triggers an AUTO keypress 3 seconds after reset)
  this allows launching the emulator with a specified disk and ROM
  configuration, and even launching the auto menu.bas program

* added a new disk to the pulldown list: BLANK (just a formatted disk)

* added back sector-level floppy disk suport

----- emulator TODO list -----

soundware emulation corner case:
    taylor_2.ccvf, STREK2.BAS invokes XXXXXX.BAS, which seems
    like it is printing character strings and such to the serial port
    in order to generate audio.

fix for peter's RPM.PRG?
    He triggers on the "start bit seen" status bit, rather than the rx data
    ready status.  What if start-bit-seen was driven simultaneously with
    rx-buffer-ready?
    Section 2.2.4 says:
        Bit 7, start bit detected
        A high in bit 7 indicates that the start bit of an incoming data
        character has been detected.  This bit remains high until the entire
        character has been received or until a reset is issued and is provided
        for test purposes.

    utility_3.ccvf has a program "RPM.PRG"
        which is a later version of SPEED.PRG, and it seems to run.
        Peter Hiner created this version.  it fails to work because
        the program polls on the serial port "start bit received" status bit,
        which the emulator doesn't model (it models at the byte level).
        it apparently clears track 40 (!); Peter thinks it wrote a short
        blip, then timed now long it took between two successive blips

        other/modified_utilities.ccvf has SPEEDO.PRG, which is tailored for
            v8.79 (4-phase) machines

The capture disk in box_14/asm_programs.ccvf contains a bunch of different
character sets expressed as lists of bytes.  could be useful.

the emulator doesn't honor the disk write protection flag
    (just like the real hardware!)
why does it exist?

cleanup (ever?):
    figure out how to put everything into one emulator namespace even
    when modules are in separate files.  Having "pad()" at the global
    scope is particularly bad.
    http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html

page 5.20 of the maintenance manual talks about DRAM refresh.  It seems like a
one-shot times out each 1 ms, and then 64 or 128 refresh cycles are performed.
"refresh requires 32 us (64 us for 128 cycles) for completion."
When the floppy is transferring data, 64 uS represents about five bit times.
So refresh could add jitter of this magnitude during reads and writes.

javascript modal boxes:
    http://www.ericmmartin.com/projects/simplemodal-demos/
    http://leanmodal.finelysliced.com.au/#
